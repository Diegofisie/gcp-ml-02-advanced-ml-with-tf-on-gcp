Let's put this into practice with the lab. In this lab, we'll implement data augmentation ourselves using some of the techniques we've discussed. We'll be working with a more realistic dataset in MNIST, color pictures of flowers. The introduction of colors simply means that the shape of our inputs will change. Whereas before, our input was batch size by height by width. Now, we're adding another dimension to allow us to have multiple channels. To our model though, it's simply a tensor of higher rank. The data set for this task is arranged just like the code I discussed earlier. The input CSV file, will consists of two columns: one of which is a path to an image on cloud storage and the other of which is the label, which is a flower species name. Keep in mind though, the header is just for the slides, the actual file doesn't have one. For extra credit, try implementing a custom data augmentation function. One classic way of augmenting image data is by blurring the image. When data is blurred, each pixel becomes the average of its neighbors and one simple way of doing this is by using a convolutional kernel. I'll leave the rest to you.