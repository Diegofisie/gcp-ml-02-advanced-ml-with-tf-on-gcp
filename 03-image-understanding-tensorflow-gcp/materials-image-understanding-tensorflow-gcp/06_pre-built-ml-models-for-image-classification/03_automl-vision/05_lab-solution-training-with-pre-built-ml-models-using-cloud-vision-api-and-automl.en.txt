Okay. Welcome to using the Cloud Vision API. We're going to go through the lab using the Cloud Vision API on a real example and show you how to do that. So, you should already have platform setup. The first thing you're going to do is, you're going to go ahead and create an API key. So, you're going to go ahead and click the Navigation menu, go to APIs and Services and click Credentials. There, we already have an API key setup, we're going to go ahead and create another one. You want to go to click Create Credentials, API key, and you'll get an API key here. We don't want to restrict it all, we'll first press Close. Okay. Then we're going to go ahead and copy that, you'll copy API key 2. You want to open up to the cloud shell so, we'll go ahead and open up an instance of the Cloud Shell, and what we want to do is, we want to assign environment variable there. So, we're going to go ahead and type export API_KEY equals that API key. Okay. So now, API key is stored as an environment variable and Cloud Shell. Next thing we're going to do is, we're going to go ahead and create a storage bucket on cloud storage. So, we'll go ahead to our navigation menu, go down to Cloud Storage. Okay. We already have a bucket you created with our project name, I'm going to click through there. Then what I'm going to do is I'm going to upload a file, and the file is going to be the image that I want to use Vision API on. So, I'm going to go ahead and click Upload and I have my image on the cloud here. So, I'm going to go ahead and upload that file with the dialog, I'll finish, and we had to make sure that this is a public file. So, what I'm going to do is I'm going to click this Settings menu, I'm going to scroll down to edit permissions, and then I'm going to click Add item, select user, and for name, I'm going to type all, and then Users with the U capital and camel case, and then for a reader that's the accessible. I'll save this, and now, they'll show that this image is pumped. I'm going to click this image over here. So, we can see what that image is. It's a picture of cirrus clouds, wispy, as distinct from other types of clouds. We'll get into that in a second. Next from there, we're going to go ahead and we're going to create a Vision API requests. The way we do that, is by creating a request.json file and in that, we're going to indicate where the image is located. Also, what part of the Vision API we're going to use. We're going to go ahead and click this pencil, and that's going to bring up the Cloud Editor. Okay. In the Cloud at Cloud Shell Editor, we already have of how we're going to use in a second. We're going to click on this request.json file, and here, we have our request.json file. You'll see as json files are structured, this is a dictionary Nesson with multiple Items and here we have requests. Within requests, we have image then source, then where our image's located? So, in this case, the bucket and then the file name. We also have our features. In this case, we want to do label detection, we want to detect which items are in the particular image, and we're going to say maxResults 10. Okay. From there, we're going to go back to our Cloud Shell, and we're going to use the crop command to make that request. Okay, this is an API. So, we can make that request with our API key, and then we'll paste that. I'm going to make this Cloud Shell bit bigger, so we can see what's happening here. So, label and annotations have four items, the MID. This is the ID and the Google knowledge graph. There's also a description of what the image contains, in this case sky, and a score and topicality which indicates some accuracy metric. So, we have the sky here, blue, daytime, center number four and this's the list that we use to cloud, we also got atmosphere, Cumulus, which is curious, we'll come back to that in a second, Azure, calm, meteorological phenomenon and computer wallpaper, which is funny. So, focusing on cumulus, this actually funny that this is labelled as stimulus, because if you're familiar with meteorology at all, this is actually a cirrus cloud. If we look at what cumulus clouds look like in Google image search, they come up as those big fluffy clouds, clouds that look like there may be a storm on the horizon, but also clouds that look peaceful. But that's not we're getting here. So, this seems to indicate that we need some finer granularity and finer control for our cloud classification. There's other cool things that we can do in Vision API including our Web Detection, and once you do that on your own, play with that. That references what you see if you search, it's like a Google reverse image search which is pretty cool. Right now, what we're going to do is focus on the power we can leverage using our auto-Elmo framework. Okay. So, what we're going to do first is we're going to go back to our shell, we're going to go back to our home screen over here on the Google Cloud Platform console, and we're going to go ahead and click this link, you should have this link that's going to set up, our AutoML UI. So, when you click go to this link, what you will probably get is something that tells you to go to billing or set up the API, you want to click setup now, the big blue button there, and then after you click this, if you navigate over to your Google Cloud Platform dashboard and go to storage, you will notice there's a new bucket that is created. What you'll see is you'll see a new bucket with name and it ends with VCM. Okay. This is your new bucket, and this is where the Vision API is going to work from. Okay. You want to copy that bucket name. We're going to go back to our Cloud Shell. We're going to go ahead and we are going to export that bucket name as an environment variable. Okay. So, we have that bucket name Environment variable. The next thing I'm going to do is you're going to go ahead and use the gsutil command and you're going to copy the training images into your bucket. So, we're going to copy this, we're not going to run it because we've already copied the images beforehand for time's sake. I'll take about a minute or two to run that. Once you've done that, you can click refresh on your browser. Once you go into this bucket, you should see three folders. In this case, we have four folders but there's three. So, it's cirrus, cumulonimbus and cumulus. This clouds folder is our model which we'll talk about in a second. Okay. So, after that we're going to go ahead and create our dataset. The way we are going to create our dataset is by copying over our data file which indicates where each image is located as well as the label for it. We'll go ahead and use gsutil which will copy over a data.csv file. So, I'm going to go ahead and run this. What I'll do is we can use less to look at this file. What that contains a Google Cloud Storage URL with placeholder and then the name of the file and then the labels. So, in this case we have cirrus, then going down more we have cumulonimbus and lastly cumulus. I will go ahead and use the send command to replace all instances of the word placeholder with the name of the bucket, and then we'll look at that file again with less and we see that place holder has been replaced with the name of our Auto ML bucket and then what we'll do is we'll upload that file using gsutil up to our Cloud Storage Bucket. So, then when we go back if we click refresh on this bucket and we scroll down, we'll see that we have a data.csv file. So, we'll go ahead and we scroll down we see that there's a data file. Cool. All right. So, now we can actually go ahead and get started and train this model. So, I'm going to navigate back to my Auto ML UI and what you should see, you'll use our blue boxes as critical as a model, but you also see a button that says new dataset. So, you're going to want to click New Dataset and what that's going to give you, is this kind of prompt you for a data set name, we'll call it clouds we're not going to actually create this dataset since we already have one. I'll give you some options for import. So I'll say import, and upload images from your computer, you can also select a CSV file from Cloud Storage that points to your paths and also has labels. In this case this is what we'd want to do, so we type data.csv. You can also import your images later. Lastly, you have the option to use multi-label classification. That's a case where if we want to put multiple labels on a single image that's what we want to do, we're just looking at one label per image in this case and after that you click Create Dataset. We've already created a data set. So, I'm going to click cancel here and then we have our dataset we've already created. So I'm going to go ahead and click into that. From there, we're going to get a really cool interface which gives us all our images. Under each of these images, is a label in this case are cumulus clouds. When you scroll down, you'll also see our cumulus nimbus clouds and then we can also see our cirrus clouds. You can also filter here by clicking the labels on the side and we'll see only our cumulus clouds, only our cirrus clouds et cetera okay. Lastly, to train the model we're going to go ahead and click Train. When you click train, that's going to give you an option to train a new model. So, I'm going to click train new model and what that'll give me is a model name. Usually this has a timestamp here, our training budget. In this case on a real GSB instance, it will give you a option to do one compute error or to charge it to an account and also a data summary. Okay. Then you click start training to create a new model. That takes about 15 minutes to do, so no, we're not going to do it here, so I'm going to cancel out this, but I'm going to look into the model that we actually got. I'm going to see our full evaluation. Okay. So I look into this model and see how our training did, we have 60 images, our average position is perfect and there's actually perfect precision here and it's pretty amazing. So in this case, our recall and our precision is quite good at this point. In this case our threshold is set at 50, but you can also change this. So for instance if I move my score threshold to 0.75, our recall goes down, I move it over here, our precision goes down. Typically, we want to balance both precision and recall but it depends on what your task is. From there, we can also scroll all the way down, we can see a confusion matrix and so there was absolutely no confusion, we have 100% on the diurnal. Good job. So it looks like we did pretty good job here. Lastly, what we can do is that we can test our Auto ML on some new images. Okay. So, let's go ahead and go to predict. So, let's go ahead and upload an image. In this case we're going to upload that image that we tried before, that cirrus cloud that we tried to classify before. We're going to upload that and then we're going to go ahead and lo and behold, we get perfect prediction for this cirrus cloud which is pretty amazing. You can try going ahead and classifying another cloud. I'm going to go ahead and click "Upload Images" and I created this new file test2 it's a cumulonimbus. So, I'm going to upload that and we have this big cloud big fluffy cloud and [inaudible] we have a cumulonimbus cloud. That's pretty cool. So, the difference between the Auto ML model and the Vision API you are not supplying any data or any labels, Vision API is using the models that is trained itself within Google, and within Auto ML you bring your own data and you bring your own labels, and from there you can create a model from there. Pretty cool. Using both this tool inside of Vision API where you didn't have to bring any data or any labels and the API was able to do multiple classifications on a single image, and also using Auto ML where you brought your own data and you brought own labels and using Google's classifiers and deep learning models, it was able to develop a model and do prediction on that model. So, hope you enjoyed this lab, you can do this lab as many times if you want. If you want to collect your own images and play around with the Auto ML models or go ahead and try to throw all kinds of different models at Vision API, we encourages you to. Sky's the limit here. No pun intended that we're using clouds but, I hope you had fun.