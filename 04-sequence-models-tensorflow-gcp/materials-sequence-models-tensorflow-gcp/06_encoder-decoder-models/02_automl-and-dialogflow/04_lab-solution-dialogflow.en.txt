Congratulations on finishing the lab. Let's quickly go through the lab solutions here. After logging into the dialogue flow console, I am ready to create my first agent. Click create agent in the left menu. Here, I'm going to name the agent new agent. Set the default language, default time zone, and the right Google project, and click Create button. This will take a few seconds to set up the new agent. Once the agent is created, I am now looking at the dialogue flow console. On the left, is the dialogue Flow menu. The middle shows a list of intense for this agent. By default, dialogue flow agents start with two intense. Default fallback intent and default welcome intent. On the right, is a dialogue flow simulator. Let's try out. Here I type hi and press enter. My agent understood me. Since my input match to a default welcome intent, I receive one off the default replies inside the welcoming intent. Next, I want my agent to answer some simple questions such as what is your name? To do so, I am going to add an intent from the left menu and call it name. In the training phrases session, I'm going to click on the tax field and enter the following sentences here. What is your name? Do you have a name or just name? In the responses session, I click on the text view again and I'm going to enter a response here. My name is dialogue flow and now I'm going to save. Time to try out. In the simulator, I'm going to ask, what's your name? Notice that even though my query, what's your name is a little bit different than the training phrases what is your name but the dialogue flow still match the query to the correct name intense here. Now, I'm going to create a more complex intent where some parameters for spoken and programming languages and see how they can match to my specified intent. Like previously, I am going to add a new intent from the left menu, and name it as languages. In the training phrases session, I'll enters three training phrase. I know English, I speak French, and I know how to write in German. Well, I am typing dialogue flow automatically detects knowing entity such as system language in my phrase, and create a parameter language and its value for me. I can directly use the value of the parameter in my responses. So, in this case, I can use dollar sign language in my responses and it will be replaced with the language specified in the user query. In the responses session, I click on the text field again and add one response. Wow, I didn't know that you knew a language and click on Save button. And time to try out. Here, I'm going to ask, I know Russian? Here the dialogue flow correctly extract the language parameters with the value Russian from the query. Also, the parameter value Russian is correctly inserted in the responses. Except using the system entities, I can also create my own and have the agent understand some programming languages as well. To create entities, I will come back to the left menu and click on the Add button next to the entity. Our name the entity programming language, and add three programming language and their synonyms, add a text field. First, we're going to enter JavaScript. JavaScript is also known as JS. The second I going to enter java, and lastly, for Python also known as PY and click on the Save button. Let's go back to the language intense and add training phrases and a response for the programming language. In the training phrases, I going to add two new training phrases here. I know JavaScript. I know how to code in Java. While I'm typing, the dialogue flow automatically does the animations in my phrase and create the parameter programming language and its value for me. In the responses, at programming language is cool, [inaudible] and click on Save. Time to try out. In the simulator, I'm going to ask, I know how to code in PY. As you can see here, PY is correctly detected as a programming language and replaced by its true value Python in the response. Next, I want my agent to handle some more complex conversation that need full ops and underlying contexts. Still in the languages intent, I'm going to extend the original responses by adding a follow up question. So right here, I'm going to ask how long have you knew a language? And click on Save button. To add the follow-up intent, I need to go back to the languages intense from the left menu. I'm going to mouse over the language intense and click on add follow-up intent, then click home custom from the list. Dialogue flow automatically name the new follow-up intent as languages dash costume, and the arrow here indicates the relationship between two intense. In this new intent, I am going to add some training phrases to answer the follow up question, how long have you knew a language? In their training phrases here, I'm going to add three years, about four days, for five years, and click on Save. Time to try out. In the simulator, I enter I know French. To answer the follow-up question here, I enter about two weeks. The agent has matched about two weeks to the correct intense language dash costume. Since I haven't create the responses for this follow up intent, my agent has no response here. Let me quickly fix this. In the responses session, I'm going to add one response. I can't believe you have known language for a duration and click on the Save button and let's try out again. I'm going to type the same query here. I know French and their response to the follow-up question was one month. Now, I have the proper response back. The language parameter value is retrieved from the contacts and inserted in the response. This is great. I now have my conversational agent. Yes.