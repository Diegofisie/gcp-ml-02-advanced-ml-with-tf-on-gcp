In this module we showed you two technologies Kubeflow and TensorFlow Lite, that are important in hybrid Machine Learning Systems. Kubeflow gives you composability, portability and scalability while preserving the ability to run everywhere. Specifically, Kubeflow offers portability and composability, between your on-premises environment and Cloud ML Engine. That trade-off is at Kubeflow is not serverless you will have to do cluster management. Still retaining the ability to move to cloud and serverless at some point in the future offer some fraction of your workloads provides flexibility. The presence of Kubeflow also limits locking. You can always take your models of Google Cloud, and you have a way to continue training and serving those models. TensorFlow Lite make specific compromises to enable machine-learning inference on low power or under-resourced devices. For example, you can convert variable nodes into constant nodes which streamlines your model because constant nodes are embedded in the graph itself. However, you sacrifice maintainability and portability, since you cannot resume training from that model graph. Another compromise you might make is to use a less accurate model on the device. Perhaps you quantize the nodes or you use a smaller model. Of course, we hope that you choose to train and serve machine-learning models on Google Cloud, so, you don't have to make these compromises or manage all this infrastructure or train on low power devices. But if business and real-world considerations require you to be able to train or serve Machine Learning models outside a cloud environment it's good to know that you have these options. So, Kubeflow and TensorFlow Lite are good to know about to have in your back pocket, when such situations arise.